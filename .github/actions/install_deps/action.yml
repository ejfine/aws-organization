name: Install requirements
description: Setup Python and/or Node, and install dependencies based on the devcontainer specification
inputs:
  python-version:
    type: string
    description: Python version to install
    required: false # if this is set, then assume you want python dependencies installed
    default: 'notUsing'
  node-version:
    type: string
    description: Node version to install
    required: false # if this is set, then assume you want node dependencies installed
    default: 'notUsing'
  install-deps:
    required: false
    default: true
    type: boolean
    description: Whether to run the setup-deps script, or just to setup basic CI tooling
  project-dir:
    type: string
    description: What's the relative path to the project?
    required: false
    default: ./
  code-artifact-auth-role-name:
    type: string
    description: What's the role name to use for CodeArtifact authentication?
    required: false
    default: no-code-artifact
  code-artifact-auth-role-account-id:
    type: string
    description: What's the AWS Account ID that the role is in?
    required: false
  code-artifact-auth-region:
    type: string
    description: What region should the role use?
    required: false


runs:
  using: composite
  steps:
    - name: Get version of python
      # TODO: be able to pull the default version from the devcontainer.json file
      run: |
        PYTHON_VERSION="${{ inputs.python-version }}"
        echo "PYTHON_VERSION=$PYTHON_VERSION" >> "$GITHUB_ENV"
      shell: bash

    - name: Setup python
      if: ${{ inputs.python-version != 'notUsing' }}
      uses: actions/setup-python@v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Setup node
      if: ${{ inputs.node-version != 'notUsing' }}
      uses: actions/setup-node@v4.4.0
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install tooling
      # the funky syntax is github action ternary
      run: python .devcontainer/install-ci-tooling.py ${{ inputs.python-version == 'notUsing' && '--no-python' || '' }} ${{ inputs.node-version == 'notUsing' && '--no-node' || '' }}
      shell: pwsh

    - name: OIDC Auth for CodeArtifact
      if: ${{ inputs.code-artifact-auth-role-name != 'no-code-artifact' }}
      uses: aws-actions/configure-aws-credentials@v4.2.0
      with:
        role-to-assume: arn:aws:iam::${{ inputs.code-artifact-auth-role-account-id }}:role/${{ inputs.code-artifact-auth-role-name }}
        aws-region: ${{ inputs.code-artifact-auth-region }}

    - name: Install dependencies
      # the funky syntax is github action ternary
      if: ${{ inputs.install-deps }}
      run: python .devcontainer/manual-setup-deps.py ${{ inputs.python-version == 'notUsing' && '--no-python' || '' }} ${{ inputs.node-version == 'notUsing' && '--no-node' || '' }}
      shell: pwsh
